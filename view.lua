local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\116\240","\102\90\222\105\204"),function(v42) if (v9(v42,2)==79) then local v100=0;while true do if (0==v100) then v30=v8(v11(v42,1,1));return "";end end else local v101=0;local v102;while true do if (v101==0) then v102=v10(v8(v42,16));if v30 then local v121=v13(v102,v30);v30=nil;return v121;else return v102;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v103=0;local v104;while true do if (0==v103) then v104=(v43/(2^(v44-1)))%((5 -3)^(((v45-(2 -1)) -(v44-1)) + 1)) ;return v104-(v104%1) ;end end else local v105=0;local v106;while true do if (0==v105) then v106=2^(v44-1) ;return (((v43%(v106 + v106))>=v106) and (1 -0)) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * (43216383 -26439167)) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35() local v53=v34();local v54=v34();local v55=1;local v56=(v31(v54,1,20) * (2^32)) + v53 ;local v57=v31(v54,21,31);local v58=((v31(v54,32)==1) and  -1) or 1 ;if (v57==0) then if (v56==0) then return v58 * 0 ;else local v109=0;while true do if (v109==0) then v57=1;v55=0;break;end end end elseif (v57==2047) then return ((v56==0) and (v58 * (1/0))) or (v58 * NaN) ;end return v16(v58,v57-1023 ) * (v55 + (v56/(2^52))) ;end local function v36(v59) local v60;if  not v59 then v59=v34();if (v59==0) then return "";end end v60=v11(v27,v29,(v29 + v59) -(620 -(555 + 64)) );v29=v29 + v59 ;local v61={};for v75=1, #v60 do v61[v75]=v10(v9(v11(v60,v75,v75)));end return v14(v61);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v62={};local v63={};local v64={};local v65={v62,v63,nil,v64};local v66=v34();local v67={};for v77=1,v66 do local v78=0;local v79;local v80;while true do if (v78==1) then if (v79==1) then v80=v32()~=(931 -(857 + 74)) ;elseif (v79==2) then v80=v35();elseif (v79==(571 -(367 + 201))) then v80=v36();end v67[v77]=v80;break;end if (v78==0) then v79=v32();v80=nil;v78=1;end end end v65[3]=v32();for v81=1,v34() do local v82=0;local v83;while true do if (0==v82) then v83=v32();if (v31(v83,928 -(214 + 713) ,1)==0) then local v117=0;local v118;local v119;local v120;while true do if (v117==3) then if (v31(v119,3,3)==1) then v120[4]=v67[v120[4]];end v62[v81]=v120;break;end if (v117==0) then v118=v31(v83,2,3);v119=v31(v83,4,6);v117=1;end if (v117==1) then v120={v33(),v33(),nil,nil};if (v118==0) then v120[3]=v33();v120[4]=v33();elseif (v118==1) then v120[3]=v34();elseif (v118==2) then v120[3]=v34() -((879 -(282 + 595))^16) ;elseif (v118==(1640 -(1523 + 114))) then local v133=0;while true do if (v133==0) then v120[3]=v34() -(2^16) ;v120[4]=v33();break;end end end v117=2;end if (2==v117) then if (v31(v119,1,1)==1) then v120[2]=v67[v120[2 + 0 ]];end if (v31(v119,2,2)==1) then v120[3]=v67[v120[3]];end v117=3;end end end break;end end end for v84=1 -0 ,v34() do v63[v84-1 ]=v39();end return v65;end local function v40(v69,v70,v71) local v72=v69[1];local v73=v69[2];local v74=v69[3];return function(...) local v86=v72;local v87=v73;local v88=v74;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v107=0,v94 do if (v107>=v88) then v92[v107-v88 ]=v93[v107 + 1 ];else v96[v107]=v93[v107 + (1066 -(68 + 997)) ];end end local v97=(v94-v88) + (1271 -(226 + 1044)) ;local v98;local v99;while true do local v108=0;while true do if (0==v108) then v98=v86[v90];v99=v98[1];v108=1;end if (v108==1) then if (v99<=52) then if (v99<=25) then if (v99<=12) then if (v99<=5) then if (v99<=2) then if (v99<=0) then v96[v98[2]]=v96[v98[3]];elseif (v99>1) then local v171=0;local v172;local v173;while true do if (v171==0) then v172=v98[2];v173={};v171=1;end if (v171==1) then for v419=1, #v95 do local v420=v95[v419];for v458=0, #v420 do local v459=0;local v460;local v461;local v462;while true do if (v459==1) then v462=v460[2];if ((v461==v96) and (v462>=v172)) then local v497=0;while true do if (v497==0) then v173[v462]=v461[v462];v460[4 -3 ]=v173;break;end end end break;end if (v459==0) then v460=v420[v458];v461=v460[1];v459=1;end end end end break;end end else v96[v98[2]]=v96[v98[3]][v98[4]];end elseif (v99<=3) then local v136=v98[2];v96[v136]=v96[v136]();elseif (v99==4) then local v176=v98[2];local v177={v96[v176](v21(v96,v176 + 1 ,v91))};local v178=0;for v328=v176,v98[4] do local v329=0;while true do if (v329==0) then v178=v178 + 1 ;v96[v328]=v177[v178];break;end end end else local v179=0;local v180;while true do if (0==v179) then v180=v98[2];do return v21(v96,v180,v91);end break;end end end elseif (v99<=8) then if (v99<=6) then v96[v98[2]]=v96[v98[3]][v98[4]];elseif (v99>7) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;else v96[v98[2]]={};end elseif (v99<=10) then if (v99==9) then v96[v98[2]]=v98[3] -v96[v98[4]] ;else local v184=0;local v185;while true do if (v184==0) then v185=v98[119 -(32 + 85) ];v96[v185]=v96[v185](v96[v185 + 1 ]);break;end end end elseif (v99>11) then v96[v98[2]]=v98[3] -v96[v98[4]] ;else local v187=0;local v188;while true do if (0==v187) then v188=v98[2];v96[v188](v96[v188 + 1 ]);break;end end end elseif (v99<=18) then if (v99<=15) then if (v99<=13) then local v140=0;local v141;while true do if (v140==0) then v141=v98[2];v96[v141]=v96[v141]();break;end end elseif (v99>14) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;else v96[v98[2 + 0 ]]=v96[v98[3]];end elseif (v99<=16) then v96[v98[2]]=v98[1 + 2 ] + v96[v98[4]] ;elseif (v99==17) then local v192=v98[959 -(892 + 65) ];local v193=v98[9 -5 ];local v194=v192 + 2 ;local v195={v96[v192](v96[v192 + 1 ],v96[v194])};for v332=1,v193 do v96[v194 + v332 ]=v195[v332];end local v196=v195[1];if v196 then local v363=0;while true do if (v363==0) then v96[v194]=v196;v90=v98[3];break;end end else v90=v90 + (1 -0) ;end elseif (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[4 -1 ];end elseif (v99<=21) then if (v99<=19) then local v143=v98[2];local v144={v96[v143](v96[v143 + 1 ])};local v145=0;for v169=v143,v98[4] do local v170=0;while true do if (0==v170) then v145=v145 + 1 ;v96[v169]=v144[v145];break;end end end elseif (v99>20) then v96[v98[2]]=v70[v98[3]];else local v199=v98[2];local v200=v96[v199];for v335=v199 + 1 ,v91 do v15(v200,v96[v335]);end end elseif (v99<=23) then if (v99>22) then v96[v98[2]]=v71[v98[3]];else local v203=v98[2];local v204=v96[v203];for v336=v203 + 1 ,v91 do v15(v204,v96[v336]);end end elseif (v99==(374 -(87 + 263))) then v96[v98[2]][v98[183 -(67 + 113) ]]=v98[4];else local v207=0;local v208;local v209;while true do if (v207==0) then v208=v98[2];v209=v96[v98[3]];v207=1;end if (v207==1) then v96[v208 + 1 ]=v209;v96[v208]=v209[v98[3 + 1 ]];break;end end end elseif (v99<=(93 -55)) then if (v99<=(23 + 8)) then if (v99<=(111 -83)) then if (v99<=26) then local v146=0;local v147;while true do if (v146==0) then v147=v98[2];v96[v147]=v96[v147](v96[v147 + 1 ]);break;end end elseif (v99==27) then local v210=v98[954 -(802 + 150) ];local v211,v212=v89(v96[v210](v96[v210 + 1 ]));v91=(v212 + v210) -1 ;local v213=0 -0 ;for v339=v210,v91 do local v340=0;while true do if (0==v340) then v213=v213 + 1 ;v96[v339]=v211[v213];break;end end end else local v214=v98[2];do return v96[v214](v21(v96,v214 + 1 ,v98[3]));end end elseif (v99<=(52 -23)) then v70[v98[3 + 0 ]]=v96[v98[2]];elseif (v99==(1027 -(915 + 82))) then v90=v98[3];else local v216=v98[2];v96[v216](v21(v96,v216 + 1 ,v91));end elseif (v99<=34) then if (v99<=(90 -58)) then local v150=0;local v151;local v152;local v153;while true do if (v150==1) then v153={};v152=v18({},{[v7("\116\248\94\16\175\78\223","\203\43\167\55\126")]=function(v367,v368) local v369=0;local v370;while true do if (0==v369) then v370=v153[v368];return v370[1][v370[2]];end end end,[v7("\154\149\45\27\4\13\201\85\160\178","\49\197\202\67\126\115\100\167")]=function(v371,v372,v373) local v374=0;local v375;while true do if (v374==0) then v375=v153[v372];v375[1][v375[2]]=v373;break;end end end});v150=2;end if (2==v150) then for v376=1 + 0 ,v98[4] do local v377=0;local v378;while true do if (v377==1) then if (v378[1 -0 ]==14) then v153[v376-1 ]={v96,v378[3]};else v153[v376-1 ]={v70,v378[3]};end v95[ #v95 + 1 ]=v153;break;end if (v377==0) then v90=v90 + 1 ;v378=v86[v90];v377=1;end end end v96[v98[2]]=v40(v151,v152,v71);break;end if (v150==0) then v151=v87[v98[3]];v152=nil;v150=1;end end elseif (v99>33) then v96[v98[2]][v98[3]]=v96[v98[8 -4 ]];else v96[v98[2]]= #v96[v98[6 -3 ]];end elseif (v99<=36) then if (v99>35) then local v220=0;local v221;local v222;local v223;while true do if (v220==1) then v223=0 + 0 ;for v425=v221,v98[4] do v223=v223 + 1 ;v96[v425]=v222[v223];end break;end if (v220==0) then v221=v98[2];v222={v96[v221](v21(v96,v221 + 1 ,v91))};v220=1;end end elseif (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==37) then do return v96[v98[2]]();end else v90=v98[3];end elseif (v99<=45) then if (v99<=41) then if (v99<=39) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==40) then local v226=v98[3 -1 ];local v227=v96[v98[3]];v96[v226 + 1 ]=v227;v96[v226]=v227[v98[4]];else local v231=v98[2];v96[v231](v21(v96,v231 + 1 ,v91));end elseif (v99<=43) then if (v99==42) then local v232=v98[2];local v233={v96[v232](v96[v232 + 1 ])};local v234=0;for v343=v232,v98[4] do v234=v234 + 1 ;v96[v343]=v233[v234];end elseif (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>44) then v96[v98[2]][v96[v98[3]]]=v98[4];elseif (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=48) then if (v99<=46) then if (v96[v98[2]]~=v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==47) then local v238=v98[2];local v239=v96[v238 + 2 ];local v240=v96[v238] + v239 ;v96[v238]=v240;if (v239>0) then if (v240<=v96[v238 + 1 ]) then v90=v98[3];v96[v238 + (794 -(368 + 423)) ]=v240;end elseif (v240>=v96[v238 + (3 -2) ]) then local v430=0;while true do if (0==v430) then v90=v98[3];v96[v238 + 3 ]=v240;break;end end end else do return;end end elseif (v99<=50) then if (v99==49) then if  not v96[v98[2]] then v90=v90 + (19 -(10 + 8)) ;else v90=v98[3];end else local v242=0;local v243;while true do if (v242==0) then v243=v98[2];v96[v243]=v96[v243](v21(v96,v243 + 1 ,v91));break;end end end elseif (v99==(196 -145)) then v96[v98[2]]=v96[v98[3]] -v96[v98[4]] ;else local v245=v98[2];v96[v245]=v96[v245](v21(v96,v245 + 1 ,v91));end elseif (v99<=78) then if (v99<=65) then if (v99<=58) then if (v99<=(497 -(416 + 26))) then if (v99<=53) then v96[v98[6 -4 ]]=v96[v98[3]]%v98[4] ;elseif (v99==54) then v96[v98[2]]=v98[3]~=0 ;else for v346=v98[2],v98[2 + 1 ] do v96[v346]=nil;end end elseif (v99<=56) then v96[v98[3 -1 ]]=v98[3]~=0 ;elseif (v99>(495 -(145 + 293))) then do return;end elseif (v98[2]==v96[v98[434 -(44 + 386) ]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=61) then if (v99<=59) then v96[v98[2]]=v96[v98[3]] + v96[v98[4]] ;elseif (v99==60) then v96[v98[2]]=v96[v98[3]] + v96[v98[4]] ;else v96[v98[2]]= #v96[v98[3]];end elseif (v99<=63) then if (v99==62) then do return v96[v98[2]]();end else v96[v98[2]]=v96[v98[3]] -v96[v98[4]] ;end elseif (v99==(1550 -(998 + 488))) then v96[v98[2]]=v96[v98[1 + 2 ]] + v98[4] ;elseif (v98[2]<v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=71) then if (v99<=68) then if (v99<=66) then v96[v98[2]]= not v96[v98[3]];elseif (v99>67) then v96[v98[2]][v96[v98[3]]]=v98[4];else v96[v98[2]]=v98[3];end elseif (v99<=(57 + 12)) then v96[v98[774 -(201 + 571) ]]={};elseif (v99==70) then v96[v98[2]][v98[1141 -(116 + 1022) ]]=v96[v98[4]];else local v258=0;local v259;local v260;local v261;while true do if (v258==0) then v259=v87[v98[3]];v260=nil;v258=1;end if (1==v258) then v261={};v260=v18({},{[v7("\8\100\214\39\132\83\70","\62\87\59\191\73\224\54")]=function(v431,v432) local v433=0;local v434;while true do if (v433==0) then v434=v261[v432];return v434[1][v434[2]];end end end,[v7("\216\61\244\204\240\11\244\205\226\26","\169\135\98\154")]=function(v435,v436,v437) local v438=0;local v439;while true do if (v438==0) then v439=v261[v436];v439[1][v439[2]]=v437;break;end end end});v258=2;end if (v258==2) then for v440=1,v98[4] do v90=v90 + 1 ;local v441=v86[v90];if (v441[1]==14) then v261[v440-1 ]={v96,v441[3]};else v261[v440-(4 -3) ]={v70,v441[3]};end v95[ #v95 + 1 ]=v261;end v96[v98[2]]=v40(v259,v260,v71);break;end end end elseif (v99<=(270 -196)) then if (v99<=(255 -183)) then if (v96[v98[861 -(814 + 45) ]]~=v98[9 -5 ]) then v90=v90 + 1 + 0 ;else v90=v98[3];end elseif (v99>73) then if (v98[1 + 1 ]<v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else local v263=0;local v264;while true do if (v263==0) then v264=v98[2];v96[v264](v96[v264 + 1 ]);break;end end end elseif (v99<=76) then if (v99==75) then local v265=0;local v266;while true do if (v265==0) then v266=v98[2];v96[v266](v21(v96,v266 + 1 ,v98[3]));break;end end else v96[v98[2]]=v71[v98[3]];end elseif (v99==77) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else local v269=v98[2];v96[v269]=v96[v269](v21(v96,v269 + 1 ,v98[888 -(261 + 624) ]));end elseif (v99<=(161 -70)) then if (v99<=84) then if (v99<=81) then if (v99<=79) then local v159=0;local v160;local v161;local v162;while true do if (v159==1) then v162=v96[v160 + 2 ];if (v162>0) then if (v161>v96[v160 + 1 ]) then v90=v98[3];else v96[v160 + 3 ]=v161;end elseif (v161<v96[v160 + 1 ]) then v90=v98[3];else v96[v160 + 3 ]=v161;end break;end if (v159==0) then v160=v98[2];v161=v96[v160];v159=1;end end elseif (v99==80) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]][v96[v98[3]]]=v96[v98[4]];end elseif (v99<=(1162 -(1020 + 60))) then v96[v98[1425 -(630 + 793) ]]=v98[3] + v96[v98[4]] ;elseif (v99==83) then local v273=0;local v274;local v275;local v276;local v277;while true do if (0==v273) then v274=v98[2];v275,v276=v89(v96[v274](v21(v96,v274 + 1 ,v91)));v273=1;end if (v273==1) then v91=(v276 + v274) -1 ;v277=0 -0 ;v273=2;end if (v273==2) then for v443=v274,v91 do v277=v277 + 1 ;v96[v443]=v275[v277];end break;end end else local v278=0;local v279;local v280;local v281;while true do if (v278==1) then v281=v96[v279 + 2 ];if (v281>0) then if (v280>v96[v279 + 1 ]) then v90=v98[3];else v96[v279 + 3 ]=v280;end elseif (v280<v96[v279 + 1 ]) then v90=v98[3];else v96[v279 + 3 ]=v280;end break;end if (v278==0) then v279=v98[2];v280=v96[v279];v278=1;end end end elseif (v99<=87) then if (v99<=85) then v70[v98[3]]=v96[v98[2]];elseif (v99==86) then local v282=0;local v283;local v284;local v285;local v286;while true do if (v282==2) then for v446=v283,v91 do local v447=0;while true do if (v447==0) then v286=v286 + 1 ;v96[v446]=v284[v286];break;end end end break;end if (v282==1) then v91=(v285 + v283) -1 ;v286=0;v282=2;end if (v282==0) then v283=v98[2];v284,v285=v89(v96[v283](v96[v283 + 1 ]));v282=1;end end else v96[v98[2]]=v96[v98[3]]%v98[4] ;end elseif (v99<=89) then if (v99==88) then local v288=0;local v289;local v290;local v291;local v292;while true do if (1==v288) then v91=(v291 + v289) -1 ;v292=0;v288=2;end if (v288==2) then for v448=v289,v91 do v292=v292 + 1 ;v96[v448]=v290[v292];end break;end if (v288==0) then v289=v98[2];v290,v291=v89(v96[v289](v21(v96,v289 + 1 ,v91)));v288=1;end end elseif v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>90) then local v293=v98[2];local v294=v98[4];local v295=v293 + 2 ;local v296={v96[v293](v96[v293 + 1 ],v96[v295])};for v351=1,v294 do v96[v295 + v351 ]=v296[v351];end local v297=v296[1];if v297 then local v389=0;while true do if (v389==0) then v96[v295]=v297;v90=v98[3];break;end end else v90=v90 + 1 ;end else v96[v98[2]][v96[v98[3]]]=v96[v98[4]];end elseif (v99<=98) then if (v99<=94) then if (v99<=92) then v96[v98[2]]=v96[v98[3]] + v98[4] ;elseif (v99>93) then local v300=0;local v301;while true do if (v300==0) then v301=v98[2];do return v21(v96,v301,v91);end break;end end else for v354=v98[2],v98[3] do v96[v354]=nil;end end elseif (v99<=96) then if (v99>95) then local v302=v98[2];local v303,v304=v89(v96[v302](v21(v96,v302 + 1 ,v98[14 -11 ])));v91=(v304 + v302) -1 ;local v305=0;for v356=v302,v91 do local v357=0;while true do if (v357==0) then v305=v305 + 1 ;v96[v356]=v303[v305];break;end end end else local v306=v98[2];do return v96[v306](v21(v96,v306 + 1 + 0 ,v98[3]));end end elseif (v99>97) then local v307=0;local v308;while true do if (v307==0) then v308=v98[6 -4 ];v96[v308](v21(v96,v308 + 1 ,v98[3]));break;end end else v96[v98[1749 -(760 + 987) ]][v98[3]]=v98[4];end elseif (v99<=101) then if (v99<=99) then v96[v98[2]]=v70[v98[3]];elseif (v99>100) then v96[v98[2]]= not v96[v98[3]];else local v312=v98[2];local v313=v96[v312 + 2 ];local v314=v96[v312] + v313 ;v96[v312]=v314;if (v313>0) then if (v314<=v96[v312 + 1 ]) then v90=v98[3];v96[v312 + 3 ]=v314;end elseif (v314>=v96[v312 + 1 ]) then v90=v98[1916 -(1789 + 124) ];v96[v312 + 3 ]=v314;end end elseif (v99<=103) then if (v99==102) then local v316=v98[2];local v317,v318=v89(v96[v316](v21(v96,v316 + (767 -(745 + 21)) ,v98[3])));v91=(v318 + v316) -1 ;local v319=0 + 0 ;for v358=v316,v91 do v319=v319 + 1 ;v96[v358]=v317[v319];end else local v320=v98[2];v96[v320]=v96[v320](v21(v96,v320 + 1 ,v98[3]));end elseif (v99>(286 -182)) then v96[v98[2]]=v98[3];else local v324=v98[2];local v325={};for v361=1, #v95 do local v362=v95[v361];for v390=0, #v362 do local v391=v362[v390];local v392=v391[1];local v393=v391[2];if ((v392==v96) and (v393>=v324)) then local v457=0;while true do if (v457==0) then v325[v393]=v392[v393];v391[1]=v325;break;end end end end end end v90=v90 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
